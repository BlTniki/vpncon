openapi: 3.0.0
info:
  title: Flask API
  version: 1.0.0
paths:
  /users/{telegram_id}:
    get:
      tags: ["Users"]
      summary: Получить пользователя по telegram_id
      parameters:
        - name: telegram_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Данные пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  telegram_id:
                    type: integer
                  telegram_nick:
                    type: string
                  role:
                    type: string
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags: ["Users"]
      summary: Удалить пользователя по telegram_id
      parameters:
        - name: telegram_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Пользователь удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users/:
    post:
      tags: ["Users"]
      summary: Создать нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                telegram_id:
                  type: integer
                telegram_nick:
                  type: string
                role:
                  type: string
                  nullable: true
      responses:
        201:
          description: Пользователь создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        400:
          description: telegram_id не уникален
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags: ["Users"]
      summary: Обновить пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                telegram_id:
                  type: integer
                telegram_nick:
                  type: string
                role:
                  type: string
                  nullable: true
      responses:
        200:
          description: Пользователь обновлён
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        400:
          description: telegram_id не уникален
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
